   1 0000               #
   2 0000               # FILE:         colony.asm
   3 0000               # AUTHOR:       avv8047 : Azhur Viano
   4 0000               #
   5 0000               # DESCRIPTION:
   6 0000               #	Program to run a simulation of a variation of
   7 0000               #	Conway's Game of Life
   8 0000               #
   9 0000               # ARGUMENTS:
  10 0000               #	None
  11 0000               #
  12 0000               # INPUT:
  13 0000               #	 Board size, generations to run, number of live cells for
  14 0000               #	 first colony, list of coordinates for first colony (each
  15 0000               #	 number seperated by a newline), number of live cells for	
  16 0000               #	 second colony, list of coordinates for live cells in 
  17 0000               # 	 second colony
  18 0000               	
  19 0000               # OUTPUT:
  20 0000               #	The board of cells at each generation
  21 0000               #	
  22 0000               	
  23 0000               
  24 0000               #NUMERIC CONSTANTS
  25 0000               
  26 0000               PRINT_INT 	= 1
  27 0000               PRINT_STRING 	= 4	
  28 0000               READ_INT 	= 5
  29 0000               ASCII_A 	= 65	
  30 0000               ASCII_B 	= 66
  31 0000               	
  32 0000               	
  33 0000               #DATA AREAS
  34 0000               	.data
  35 0000               	.align 0
  36 0000               board_1:
  37 0000 00      		.byte 0:900
     0001 00      
     0002 00      
     0003 00      
     0004 00      
     0005 00      
  38 0384               board_2:
  39 0384 00      		.byte 0:900
     0385 00      
     0386 00      
     0387 00      
     0388 00      
     0389 00      
  40 0708               	
  41 0708               
  42 0708               banner:
  43 0708 2A2A2A2A		.ascii "**********************\n"
          2A2A2A2A
          2A2A2A2A
          2A2A2A2A
          2A2A2A2A
          2A2A0A  
  44 071f 2A2A2A2A		.ascii "****    Colony    ****\n"
          20202020
          436F6C6F
          6E792020
          20202A2A
          2A2A0A  
  45 0736 2A2A2A2A		.asciiz "**********************\n\n"
          2A2A2A2A
          2A2A2A2A
          2A2A2A2A
          2A2A2A2A
          2A2A0A0A
  46 074f               gen_start:
  47 074f 3D3D3D3D		.asciiz "====    GENERATION "
          20202020
          47454E45
          52415449
          4F4E2000
  48 0763               gen_end:
  49 0763 20202020		.asciiz "    ====\n"
          3D3D3D3D
          0A00    
  50 076d               gen_line:
  51 076d 0A00    		.asciiz "\n"
  52 076f               
  53 076f               
  54 0000               	.text
  55 0000               	.align 2
  56 0000               	.globl main
  57 0000               	.globl prompt_board_size
  58 0000               	.globl prompt_generations
  59 0000               	.globl prompt_cells
  60 0000               	.globl init_display
  61 0000               	.globl print_board
  62 0000               	.globl generate_next
  63 0000               
  64 0000               
  65 0000               main:
  66 0000 23BDFFFC		addi 	$sp, $sp, -4
  67 0004 AFBF0000		sw	$ra, 0($sp)
  68 0008 34020004		li 	$v0, PRINT_STRING
  69 000c 3C040000		la	$a0, banner
     0010 34840000
  70 0014 0000000C		syscall
  71 0018               
  72 0018 0C000000		jal	prompt_board_size
  73 001c               
  74 001c 00408021		move	$s0, $v0		#s0 = board size
  75 0020               
  76 0020 0C000000		jal 	prompt_generations
  77 0024               
  78 0024 00408821		move	$s1, $v0		#s1 = generations
  79 0028               
  80 0028 3C040000		la 	$a0, board_1
     002c 34840000
  81 0030 02002821		move 	$a1, $s0
  82 0034 34060041		li	$a2, ASCII_A
  83 0038 0C000000		jal 	prompt_cells
  84 003c 1440002E		bne	$v0, $zero, main_done
  85 0040               
  86 0040 34020004		li 	$v0, PRINT_STRING
  87 0044 3C040000		la	$a0, gen_line
     0048 34840000
  88 004c 0000000C		syscall
  89 0050               
  90 0050 3C040000		la	$a0, board_1
     0054 34840000
  91 0058 02002821		move	$a1, $s0
  92 005c 34060042		li	$a2, ASCII_B
  93 0060 0C000000		jal 	prompt_cells
  94 0064 14400024		bne	$v0, $zero, main_done
  95 0068               
  96 0068 02002021		move	$a0, $s0
  97 006c 0C000000		jal 	init_display
  98 0070               
  99 0070 00009021		move	$s2, $zero
 100 0074 3C130000		la	$s3, board_1
     0078 36730000
 101 007c 3C140000		la	$s4, board_2
     0080 36940000
 102 0084               
 103 0084               main_gen_loop:
 104 0084 0232402A		slt	$t0, $s1, $s2
 105 0088 1500001B		bne	$t0, $zero, main_done
 106 008c               
 107 008c               	
 108 008c 34020004		li	$v0, PRINT_STRING
 109 0090 3C040000		la	$a0, gen_start
     0094 34840000
 110 0098 0000000C		syscall
 111 009c               
 112 009c 34020001		li	$v0, PRINT_INT
 113 00a0 02402021		move	$a0, $s2
 114 00a4 0000000C		syscall
 115 00a8               
 116 00a8 34020004		li	$v0, PRINT_STRING
 117 00ac 3C040000		la	$a0, gen_end
     00b0 34840000
 118 00b4 0000000C		syscall
 119 00b8               
 120 00b8 02602021		move	$a0, $s3
 121 00bc 02002821		move	$a1, $s0
 122 00c0 0C000000		jal	print_board
 123 00c4               
 124 00c4 34020004		li	$v0, PRINT_STRING
 125 00c8 3C040000		la	$a0, gen_line
     00cc 34840000
 126 00d0 0000000C		syscall
 127 00d4               
 128 00d4 02602021		move	$a0, $s3
 129 00d8 02802821		move	$a1, $s4
 130 00dc 02003021		move	$a2, $s0
 131 00e0               
 132 00e0 0C000000		jal	generate_next
 133 00e4               
 134 00e4 02604021		move	$t0, $s3	#swap boards
 135 00e8 02809821		move	$s3, $s4
 136 00ec 0100A021		move	$s4, $t0
 137 00f0 22520001		addi	$s2, $s2, 1
 138 00f4 08000021		j	main_gen_loop
 139 00f8               
 140 00f8               
 141 00f8               main_done:
 142 00f8 8FBF0000		lw	$ra, 0($sp)
 143 00fc 23BD0004		addi	$sp, 4
 144 0100 03E00008		jr	$ra
 145 0104               
 146 0104               
 147 0104               	
 148 0104               	


ASCII_A             = 00000041   
ASCII_B             = 00000042   
PRINT_INT           = 00000001   
PRINT_STRING        = 00000004   
READ_INT            = 00000005   
banner                00000708 R  data 
board_1               00000000 R  data 
board_2               00000384 R  data 
gen_end               00000763 R  data 
gen_line              0000076D R  data 
gen_start             0000074F R  data 
generate_next         ******** XG
init_display          ******** XG
main                  00000000 RG text 
main_done             000000F8 R  text 
main_gen_loop         00000084 R  text 
print_board           ******** XG
prompt_board_size     ******** XG
prompt_cells          ******** XG
prompt_generations    ******** XG
